#
#- ~/.bashrc
# shellcheck disable=SC2016,SC2064
## shellcheck disable=SC1000-SC9999
#-If not running interactively, don't do anything
[[ $- != *i* ]] && return
#- Use VI Keys -#
set -o vi
#- Default Permissions -#
umask 077
#- Default PS0,PS1,PS3 if mps() doesn't run -#
PS0='\e[0 q\[\e[0m\]'
PS1=':\w/:> '
PS2='\e[0 q\[\e[0m\]'
#########################################################################
#  FUNCTIONS                                                            #
#########################################################################
mps() {
    local h1='\[\e[00;01;07;34m\]'  h2='\[\e[00;01m\]'  h3='\[\e[00;01;34m\]'   h4='\[\e[00;01;33m\]'
    local d1='\D{%F}'               d2='\D{%T}'         d3='\D{%s}'
    local d4='\D{%d-%m-%y}'         d5='\D{%H%M}'       d6='\D{%Y%m%d}'
    local s1=':\w/:>'               s2='-\$'            s3=':\W/:>'
    #- INITIALIZE -#
    PS0=''
    PROMPT_DIRTRIM='0'
    case "${1,,}" in
             l) PROMPT_DIRTRIM='2'; PS1="$h1 $d1 | $d2 $h2 $s1 "
        ;;   m) PROMPT_DIRTRIM='1'; PS1="$h1 $d4 $d5 $h2 $s3 "
        ;;   s) PROMPT_DIRTRIM='0'; PS1=" $d3 $s2 "
        ;;  xs) PROMPT_DIRTRIM='5'; PS1="${h4} :\w:$ ${h2}"
                #PS0="${h1} ${PWD} | ${d1} | ${d2} \n"'\e[0 q\[\e[0m\]'
        ;;   x) PROMPT_DIRTRIM='5'; PS1="${h3} |${d6}|\w:$ "
        ;;   *) return 2
    esac
    PS1+='\[\e[0m\]'
} ; mps 'xs'
cd_from_lf() {
    #lf -log="${MY_LOGS}/LF_LOGS/$(date +'%s')_LF_LOG.txt"
    lf
    if a="$(find /tmp/ -type f -name 'tmplf*' 2>/dev/null | tail -1)"
    then
        if [[ "${PWD}" != "${a}" ]] ; then
            cd "$(cat "${a}")" || return 1
        fi
        trash-put "${a}"
    fi
}
mycd()    {
    local MAXDEPTH=10
    local RESTRICT='H'
    [[ "${1}" =  '-g'        ]] && cd /              && shift 1
    [[ "${1}" =~ ^[-]u$      ]] && RESTRICT='u'      && shift 1
    [[ "${1}" =~ ^[-][0-9]+$ ]] && MAXDEPTH="${1#-}" && shift 1
    cd "${@:-"$(fd -"${RESTRICT}" -td -d "${MAXDEPTH}" 2>/dev/null | fzf --preview="${LS_PREVIEW} {}")"}" || return 1
}
open_mpv() {
    local AUD CLOSE FILE_FZF
    while [[ "${1,,}" =~ ^-[-?].*$ ]] ; do
        [[ "${1,,}" =~ ^-m(ono)?      ]] && AUD="mono"
        [[ "${1,,}" =~ ^(-c|--close)$ ]] && CLOSE="close"
        [[ "${1,,}" =~ ^(-f|--fzf)$   ]] && \
            FILE_FZF="$(fd -H "[.](mp4|mkv|avi|mpeg|mpeg4|mpv|mpv4|m4v|mpg|m4p|mov|wmv|webm)$" | fzf --preview="ctpv {}")"
            [[ ! -f "${FILE_FZF}" ]] && return 1
        shift 1
    done

    if [[ -n "${FILE_FZF}" ]] ; then
        mpv --audio-channels="${AUD:-"auto"}" "${FILE_FZF}" --input-ipc-server=/tmp/mpvsocket & disown
    else
        mpv --audio-channels="${AUD:-"auto"}" "${@:-.}" --input-ipc-server=/tmp/mpvsocket & disown
    fi
    [[ "${CLOSE}" = 'close' ]] && exit
}
open_prog() {
    xdg-open "${1}" & disown
}
get_outdated_pip() {
    local zfile
    local IFS=$'\n'
    zfile="$(mktemp /tmp/get_outdated_pip_XXXXXXXX.txt)"
    trap "trash-put '${zfile}'" SIGINT SIGHUP EXIT RETURN
    pip list --outdated > "${zfile}"
    nvim "${zfile}"
}
fpend() {
    if [[ "$1" =~ ^-[dD](ate)? ]] ; then shift 1; local MDATE; MDATE="#$(date)"; fi
    if [[ -f "${1}"            ]] ; then
        for i in "${@:2}" "${MDATE:-"_"}"; do
            echo "${i}" '  |---|  ' "${1}"
            echo "${i}" >> "${1}"
        done
        return "$?"
    fi
    echo "INCORRECT ARGUMENTS"; return 1
}
addally() {
    echo '#----------ADDALLY----------# '"${ITEXT}"  >> "${HOME}/.bashrc"
    printf 'alias %s='\''cd "%s"'\'' %s\n' \
        "${1}" "${PWD/$HOME/\$\{HOME\}}" "${ITEXT}" >> "${HOME}/.bashrc"
}
alias_conflict() {
    local cvm wcl
    cvm="$(compgen -c)"
    while read -r -d$'\n' i ; do
        wcl="$(grep -c -x "${i}" <<< "${cvm}")"
        if [[ "${wcl}" -gt 1 ]] ; then
            echo "---------${wcl} - ${i}"
            [[ "${1::2}" = '-f' ]] && type -a "${i}" | sed -E "s/(.*[\`]|^)/\t/"
        fi
    done < <(alias -p | grep -Pio '^[ \t]*alias[ \t]*\K[^=]*')
}
fzf_edit() {
    rg --ignore-file="${XDG_CONFIG_HOME}/rg/code.rg" --hidden --files "${1:-.}" 2>/dev/null \
        | fzf --preview="highlight -O ansi -l {} 2>/dev/null" --print0                      \
        | xargs -0 -r -o "${EDITOR}"
}
get_alias_fzf() {
    local prc='grep -Po '
    local prc+='"^alias[ \t]*"{}"[=].[ \t]*\K.*" '
    local prc+="$HOME/.bashrc"
    xcmenu --input --clipboard \
        "$(fzf --preview="${prc}" < \
            <(alias -p | grep -Pio '^[ \t]*alias[ \t]*\K[^=]*'))"
}
bash_history_grab() {
    if [[ -n "${2}" ]] ; then
        grep -Pi "${2}" "${HISTFILE}" | tail -n "${1}"
    else
        grep -Pi "${1}" "${HISTFILE}"
    fi
}
function rg_with_p() {
    rg "${@}" | $PAGER
}
#########################################################################
#  ALIASES                                                              #
#########################################################################
#                              SPECIAL  #

alias ls='ls --color="auto" '
alias grep='grep --colour="auto" --group-separator="===================================" '
alias systemctl='systemctl --no-pager'
alias info='info --vi-keys'
alias sudo='sudo -v; sudo '
alias df='df -h'
alias cp='cp -i'
alias free='free -h'
alias pacman='pacman --color="always"'
alias yay='yay --color="always"'
#-----------------------------------1L--#
alias a='         get_alias_fzf'
#        b=          RESERVED
alias c='         mycd'
alias d='         deactivate' # For python virtualenv
alias e='         xcmenu --input --primary'
alias f='         fd -H'
alias g='         grep -Pi'
#     h=          RESERVED
alias i='         iex' # elixir
alias l='         cd_from_lf' # my lf, so it cd's shell after exiting lf
alias m='         mimetype'
alias n='         lsd --group-dirs="first" -t -r --icon="never" --permission="octal"  --date=+" %l:%M%P %y %m %_d " --blocks="permission,user,date,size,name"'
alias o='         mycd -1'
alias p='         pwd'
#-    q #
alias r='         \rg --pcre2 -i'
alias s='         cd - &>/dev/null'
alias t='         trash-put'
#-    u #
alias v='         sc-im'
#-    w           RESERVED
alias x='         xdg-open'
alias y='         source .venv/bin/activate'
alias z='         zathura'
#-----------------------------------1U--#
alias B='         bat'
alias C='         cd ..'
alias E='         xcmenuctrl'
alias F='         fd --unrestricted'
alias G='         grep -F'
alias L='         ls++'
alias M='         ./manage.py'
alias O='         open_prog'
alias P='         readlink -f' # get full path of file
alias W='         whereis'
#     X           RESERVED
#-----------------------------------2---#
alias ac='        compgen -c  | grep -x'
alias cz='        ccze -m ansi'
alias fz='        mycd'
alias gd='        xcmenu --input --clipboard "$(pwd)"'
alias gf='        grep --file="-" -Fi "${HOME}/.bashrc" <<<'
alias gg='        grep -P -r -i'
alias gr='        grep --file="-" -Pi "${HOME}/.bashrc" <<<'
alias hb='        nvim "${HISTFILE}"'
alias ic='        clear; imgcat'
alias lc='        compgen -c'
alias ll="        lsd --icon='never' -rt --permission='octal'  --date=+'[%_H:%M:%S|%a|%D]' --blocks='permission,user,date,name'"
alias nf='        fzf_edit'
alias nv='        nvim'
alias pe='        ps -eo comm=,'
alias po='        ps -eo cmd=,'
alias rh='        \rg --hidden --ignore-file="${XDG_CONFIG_HOME}/rg/rg_html_web.gitignore" --pcre2 -i'
alias ro='        \rg --hidden --ignore-file="${XDG_CONFIG_HOME}/rg/rg_html_web.gitignore" --one-file-system --pcre2 -i'
alias rt='        \rg --hidden --ignore-file="${XDG_CONFIG_HOME}/rg/rg_basic.gitignore" --pcre2 -i'
alias tl='        tar --list --file'
alias xf='        xdg-open "$(fzf --preview="ctpv {}")"'
alias xr='        echo ""; nvim "${HOME}/.Xresources"; xrdb "${HOME}/.Xresources"'
#------------------------------------------------------------#
alias mmcopy='    math137; cp templates/template.html'
alias ren='       renamer'
alias acc='       alias_conflict'
alias acf='       alias_conflict --full'
alias alas_np='   alias -p | grep -Pio "^[ \t]*alias[ \t]*\K[^=]*" | column'
alias bsg='       ps ax | grep -Pv "/usr/lib/brave" | grep -Pi'
alias comv='      command -V'
alias cop='       xclip -selection "clipboard" -i <<< '
alias decl='      declare -f'
alias doren='     perl-rename -v'
alias eread='     fd "[.](pdf|epub|mobi|azw2|djvu)$" | fzf --preview="ctpv {}" --print0 | xargs -0 -r -o zathura --fork; exit'
alias ezchmod='   chmod og-rwx -R .'
#alias   fnsc='      (read _z; $EDITOR <(xlsfonts | grep -F -- "--0-0-0-0-" | grep -Pi -- "${_z:-''}")) <<<'
alias rifs="      IFS=$' \t\n'" #; printf 'IFS=%q\n' "${IFS}" ; }
alias pifs='      printf "\n_%q_\n\n" "${IFS}"'
alias fread='     fd "[.](pdf|epub|mobi|azw2|djvu)$" | fzf --preview="ctpv {}" --print0 | xargs -0 -r -o zathura --fork'
alias getfont='   fc-list -v | grep -i '
alias gfi='       fd --search-path "/" -u --mount'
alias gital='     git log --source --all -S'
alias git_mt='    git log --pretty=format:"%h %s" --graph'
alias gport='     netstat -lntu | grep -Pi'
alias grab_dir='  xcmenu --input --clipboard "$(pwd)"'
alias hfi='       fd --search-path "${HOME}" --exclude ".mynvim" --exclude ".local" --hidden'
alias i3c='       i3 -C "$HOME/.config/i3/config"'
alias img='       nsxiv -0'
alias inx='       inxi' # Computer stats, hardware
alias isport='    (read _z; ss -lp "sport = :${_z}") <<< '
alias k_at_spi2=' killall at-spi2-registryd; killall at-spi2-bus-launcher; killall at-spi-registryd; killall at-spi-bus-launcher'
alias ldi='       fdisk -l -o +uuid'
alias listaudio=" find . -type f -iregex '.*[.]\(mp3\|flac\)'"
alias list_coms=' compgen -c'
alias listmedia=" listaudio; listpics; listvids"
alias listpics="  find . -type f -iregex '.*[.]\(jp[e]?g\|png\|tiff\|webp\|bmp\|avif\|ico\|gif[v]?\)'"
alias listvids="  find . -type f -iregex '.*[.]\(mov\|m4v\|mkv\|mp[e]?[4vg]\|webm\|avi\|amv\)'"
alias lla='       ll -a'
alias lsn="       lsd --icon='never' -l"
alias lst="       lsd --icon='never' -ltrh"
alias lsz="       lsd --icon='never' -lSrh"
alias manlist='   man -f'
alias men='       (read _z; MAN_KEEP_FORMATTING=1 man -a "${_z}" 2>/dev/null | $PAGER) <<< '
alias mixf='      mix format'
alias mixc='      mix compile'
alias iexm='      iex -S mix'
alias mycdu='     mycd -u'
alias nimg='      nsxiv -0 .'
alias pcal='      calcurse'
alias pdf='       zathura --fork'
alias pgr='       $PAGER'
alias pse='       ps -eo comm=, | grep --ignore-case'
alias psg='       ps ax | grep -Pi'
alias pso='       ps -eo cmd=, | grep --ignore-case'
alias quickren="  perl-rename -v 's/[^0-9a-zA-Z\-.]/_/g' *"
alias rml='       rmlint --no-followlinks --keep-all-tagged --no-crossdev --paranoid --progress --types="duplicates"'
alias sap='       apropos'
alias slc='       compgen -c | grep -i'
alias sman='      man -K --regex'
alias snv='       sudoedit'
alias testren='   perl-rename -v -n'
alias tracenet='  strace'
alias tret='      ps -ejH'
alias tres='      ps -eHo euser,ruser,suser,fuser,f,comm,label'
alias trev='      ps axjf'
alias ufwd='      ufw delete'
alias ufwn='      ufw status numbered'
alias ufws='      ufw status verbose'
alias upfonts='   fc-cache -f -v; echo $?'
alias getmonospacefonts='fc-list :spacing=100 | grep -i '
alias xprattach=' nohup /usr/bin/xpra attach :${XPRA_DISPLAY_NUMBER} &'
#------------------------------------------------------EXPAC-#
alias exspace='   expac -HM "%m %n" | sort -n'           # Size of packages pacman
alias exlast="    expac --timefmt='%Y    %m    %d    %R' '%l    --    %n' | sort | grep"
alias exopt='     expac -Qv -l "\n\t" "%n:\n\t%O"'
alias exdep='     expac -Qv -l "\n\t" "%n:\n\t%D"'
#--------------------------------------------------------YAY-#
alias yayremove=' yay -Yc --noconfirm; yay -Scc --noconfirm'
alias yayse='     yay -Ss'
alias yayi='      yay -Si'
alias yayp='      yay -P --stats'
alias yayil='     yay -Qi'
alias yaysel='    yay -Qs'
alias yayfrom='   yay -Qo'
alias yayfiles='  yay -Qql'
alias yaycool='   yay -Sl aur | grep "Installed"'
alias yaysalt='   yay -Sl | grep -Pio ".*(?=\[installed\])"'
alias yigse='     (read _a _b; yay -Ss "${_a}" | grep -C1 -Pi "${_b:-^[^ \t].*}") <<< '
alias rqs='       (read _a ; yay -Qi "${_a}" | grep -Pi "^[ \t]*(Required[ \t]*By|Optional[ \t]*For)" | grep -Pio "(.*[:]|[ \t]*[^ \t]*)") <<< '
#-----------------------------------------------------PACMAN-#
alias ptc='       pactree --color' #Pacman Dependencies
alias pacse='     pacman -Ss'
alias paci='      pacman -Si'
alias pacdep='    pacman -T'
alias pacneed='   pacman -Qet'
alias pacprog="   pacman -F"
alias paclocal='  pacman -Qm'
alias pacsel='    pacman -Qs'
alias pacil='     pacman -Qi'
alias pacfrom='   pacman -Qo'
alias pacfiles='  pacman -Qql'
alias pacool='    pacman -Sl | grep -Fi  "[installed]" | grep -i'
alias pacnot='    pacman -Sl | grep -vFi "[installed]" | grep -i'
alias fl="        pacil | grep -A 3 -B 18 'Installed as a dependency for another package' | grep -Pi -B 10 -A 11 'Required by.*None' | grep -Pio 'Name[\ \t:]+\K.*$'"
alias flg="       pacil | grep -A 3 -B 18 'Installed as a dependency for another package' | grep -Pi -B 10 -A 11 'Required by.*None' | grep -Pi -B 12 'Optional\ for.*None$' | grep -Pio 'Name[\ \t:]*\K.*$'"
alias fle='       pacil | grep -A 3 -B 18 "Installed as a dependency for another package" | grep -Pi -B 10 -A 11 '"'Required by [\ \t]*:\ None'"' | grep -Pi '"'^Name.*$'"
alias pigse='     (read _a _b; pacman -Ss "${_a}" | grep -C1 -Pi "${_b:-^[^ \t].*}") <<< '
#------------------------------------------------------------#
alias sctl='      journalctl | ccze -m ansi'
alias i3e='       find "${XDG_CONFIG_HOME}/i3/" -maxdepth 1 -type f -print0 | xargs -0 nvim -p'
alias ebash='     nvim "${HOME}/.bashrc"; source "${HOME}/.bashrc"'
alias einp='      nvim "${HOME}/.inputrc"'
alias editnv='    nvim "${HOME}/.config/nvim/"*.vim'
alias emime='     nvim "${HOME}/.config/mimeapps.list"'
alias ysb='       source "${HOME}/.bashrc"'
alias capkey='    xev | grep -Pio '\''(keysym [^)]*)'\'
alias nvgr='      grep --file="-" -Pri "${HOME}/.config/nvim/" <<< '
alias i3gr='      grep --file="-" -Pri "${HOME}/.config/i3/"   <<< '
alias vid='       open_mpv'
alias fvid='      open_mpv --fzf'
alias flip_img='  mogrify -rotate 180 *.jpg'
alias killun='    killall at-spi2-registryd; killall at-spi2-bus-launcher; killall at-spi-registryd; killall at-spi-bus-launcher; killall tumblerd'
alias szof="      du -axhc --time --max-depth=1 | grep -Pv '^0[ \t]' | sort -h"
alias szofall='   du -ahc  --time --max-depth=1'
alias bgsz='      szof | grep -P "^[^ ]*G"'
alias ydl='       cd "${VIDEOS}"; yt-dlp -o "%(title)s.%(ext)s" --restrict-filename'
alias getkeysall='   xmodmap -pke'
alias key_spec='      evemu-describe'
alias betterkey='     showkey -k'
#   CODING                                                              #
alias springmr='  mvn spring-boot:run'
#-----------------------------------------------------DJANGO-#
alias djs='       python manage.py runserver'
alias tjs='       python manage.py test'
#--------------------------------------------------------PIP-#
alias pips='      poetry search'
alias pipf='      pip freeze'
alias pipsl='     pip list | grep -i'
alias pip3sl='    pip3 list | grep -i'
#   CD                                                                  #
alias b='         cd "${BIN}"'
alias h='         cd "${HOME}"'
alias vids='      cd "${VIDEOS}"'
alias down='      cd "${DOWNLOADS}"'
alias pics='      cd "${PICTURES}"'
alias docs='      cd "${DOCUMENTS}"'
alias desk='      cd "${DESKTOP}"'
alias infs='      cd "${MY_INFORMATION}"'
alias spred='     cd "${SPREADSHEETS}"'
alias wallz='     cd "${WALLPAPERS}"'
alias lke='       cd "${HOME}/Notebooks/REFERENCE_SHEETS/"'
#alias lib='       cd "${MY_LIBRARY}"; cd_from_lf'
alias ww='        cd "${MY_WEB}"'
alias inf='       cd "${MY_INFORMATION}"; cd "$(fd -H --maxdepth 1 -t d | fzf --preview="${LS_PREVIEW} {}")"'
alias cnf='       cd "${XDG_CONFIG_HOME}"; cd "$(fd -H --maxdepth 1 -t d | fzf --preview="${LS_PREVIEW} {}")"'
alias conf='      cd "${XDG_CONFIG_HOME}"'
alias nvcode='    cd "${CODING}"; nf'
alias nswp='      cd "${HOME}/.mynvim/swapfiles/"'
alias cde='       cd "${CODING}"; cd "$(fd --maxdepth 3 -t d | sort -n | fzf --preview="${LS_PREVIEW} {}")"'
alias clne='      cd "${CLONED}"; cd "$(fd --maxdepth 1 -t d | sort -n | fzf --preview="${LS_PREVIEW} {}")"'
alias rcel='      zathura --fork "${MY_LIBRARY}/CURRENTLY_READING/elixir_in_action_2nd_edition.pdf"'
#########################################################################
#  EXPORT                                                               #
#########################################################################
#------------------BASH-HISTORY--------#
shopt -s histappend
export  PROMPT_COMMAND='history -a;history -n'
export  HISTSIZE=1000000
export  HISTFILE="$HOME/.bash_history"
export  HISTCONTROL=ignoreboth
export  TMPDIR="/tmp/"
#------------------XDG-----------------#
export  XDG_CONFIG_HOME="${HOME}/.config"
export  XDG_CACHE_HOME="${HOME}/.cache"
#export  XDG_STATE_HOME="$HOME/.local/state/" # Have to fix dirs first
#export  XDG_DATA_HOME="$HOME/.local/data/"   # Have to fix dirs first
#------------------FZF-----------------#
export  FZF_DEFAULT_COMMAND='fd -H'
export  FZF_DEFAULT_OPTS='--bind ctrl-a:first
                          --bind ctrl-e:last
                          --bind ctrl-u:half-page-up
                          --bind ctrl-d:half-page-down
                          --bind ctrl-g:preview-half-page-down
                          --bind ctrl-h:preview-half-page-up
                          --bind ctrl-K:clear-query
                          --bind ctrl-space:toggle-preview'
export  LS_PREVIEW='lsd   --color=always        \
                          --group-dirs="first"  \
                          --timesort            \
                          --reverse             \
                          --icon="never"        \
                          --permission="octal"  \
                          --date=+"%y%m%_d"     \
                          --blocks="permission,user,date,name"'
#------------------SYSTEM--------------#
export  SUDO_EDITOR='vim'
export  TERM='st-256color'
export  TERMINAL='/usr/local/bin/st'
export  EDITOR="nvim"
export  ERL_AFLAGS="-kernel shell_history enabled"
#------------------MINE----------------#
export  STANDARD_IFS=$' \t\n'
export  BACKUP="${HOME}/BACKUP_FILES"
export  BIN="${HOME}/bin"
export  BROWSER="/usr/bin/brave"
export  DESKTOP="${HOME}/Desktop/"
export  DOCUMENTS="${HOME}/Documents/"
export  DOWNLOADS="${HOME}/Downloads/"
export  MY_LIBRARY="${HOME}/MyLibrary/"
export  MY_LOCAL="${HOME}/.local/"
export  MY_LOCAL_BIN="${MY_LOCAL}/bin/" # By default this is in path (set by os, not by me) (just so i remember)
export  MY_LOCAL_SHARE="${MY_LOCAL}/share/"
export  MY_LOCAL_LIB="${MY_LOCAL}/lib/"
export  PICTURES="${HOME}/Pictures/"
export  VIDEOS="${HOME}/Videos/"
export  WHEN_CONFIG_HOME="${XDG_CONFIG_HOME}/when"
export  W3M_DIR="${XDG_CONFIG_HOME}/w3m/"
#------------------PAGER---------------#
export  MOST_INITFILE="${XDG_CONFIG_HOME}/most/most.rc"
export  MOST_EDITOR='nvim'
export  PAGER='most'
export  LESSOPEN='|pygmentize -g %s'
export  LESS='-R'
#------------------TEXT----------------#
export TT_BOL='\033[01m'
export TT_DIM='\033[02m'
export TT_ITA='\033[03m'
export TT_UND='\033[04m'
export TT_BLI='\033[06m'
export TT_REV='\033[07m'
export TT_HID='\033[08m'
#------------------FOREGROUND----------#
export FG_BLA='\033[30m'
export FG_RED='\033[31m'
export FG_GRE='\033[32m'
export FG_YEL='\033[33m'
export FG_BLU='\033[34m'
export FG_MAG='\033[35m'
export FG_CYA='\033[36m'
export FG_WHI='\033[37m'
#------------------BACKGROUND----------#
export BG_BLA='\033[40m'
export BG_RED='\033[41m'
export BG_GRE='\033[42m'
export BG_YEL='\033[43m'
export BG_BLU='\033[44m'
export BG_MAG='\033[45m'
export BG_CYA='\033[46m'
export BG_GRA='\033[47m'
export BG_WHI='\033[48m'
export BG_NON='\033[49m'
#------------------MULTI-LEVEL---------#
export  MY_INFORMATION="${DOCUMENTS}/INFORMATION"
export  SPREADSHEETS="${DOCUMENTS}/SPREADSHEETS"
export  WALLPAPERS="${PICTURES}/Wallpapers"
export  CODING="${DESKTOP}/Coding/"
export  CLONED="${DESKTOP}/CLONED/"
#-----------------------------------------------APPLICATIONS-#
export  NO_AT_BRIDGE=1
export  QT_QPA_PLATFORMTHEME="qt6ct"
export  npm_config_prefix="${HOME}/.local"
export  GTK2_RC_FILES="/usr/share/themes/Midnight/gtk-2.0/gtkrc"
#------------------------------------------------------------------------------------------------------------------------------------------------ #
#####################   Fixes colored man pages when using `most`, for some reason, TY https://stackoverflow.com/users/26449/bill                 #
export  GROFF_NO_SGR=1 ### https://stackoverflow.com/a/32456403                                                                                   #
#####################   https://stackoverflow.com/questions/32384644/color-setting-works-for-only-for-help-tab-in-man-page-dosent-work-for-the-en #
#---------------------------------------------------------------------- #
#-`PATH`                                                                #
#---------------------------------------------------------------------- #
if  [ -d "${HOME}/.local/bin/FreeTube/" ] ; then PATH="${HOME}/.local/bin/FreeTube:$PATH" ; fi
if  [ -d "${HOME}/bin/"                 ] ; then PATH="${HOME}/bin/:$PATH"                ; fi
if  [ -d "${HOME}/bin/txt2man"          ] ; then PATH="${HOME}/bin/txt2man:$PATH"         ; fi
if  [ -d "${HOME}/bin/i3wm"             ] ; then PATH="${HOME}/bin/i3wm:$PATH"            ; fi
if  [ -d "${HOME}/bin/personal"         ] ; then PATH="${HOME}/bin/personal:$PATH"        ; fi
if  [ -d "${HOME}/bin/ufw"              ] ; then PATH="${HOME}/bin/ufw:$PATH"             ; fi
if  [ -d "${HOME}/Desktop/MY_APPS"      ] ; then PATH="${HOME}/Desktop/MY_APPS:$PATH"     ; fi
if  [ -d "/etc/systemd/user"            ] ; then PATH="/etc/systemd/user:$PATH"           ; fi
if  [ -d "/usr/bin"                     ] ; then PATH="/usr/bin:$PATH"                    ; fi
if  [ -d "${HOME}/.cargo/bin"           ] ; then PATH="${HOME}/.cargo/bin:$PATH"          ; fi

