
#
#- ~/.bashrc
## shellcheck disable=SC1000-SC9999
#-
#
#-If not running interactively, don't do anything
[[ $- != *i* ]] && return
#########################################################################
set -o vi
umask 077
#########################################################################
PS0='\e[0 q\[\e[0m\]'
PS1='>'
PS2='\e[0 q\[\e[0m\]'
#########################################################################
#-----------------------------------------------------------------------#
#  FUNCTIONS								                            #
#-----------------------------------------------------------------------#
#########################################################################
git_clone() {
    cd "${CLONED}"
    git clone "${@}"
    #tee
}
mps() {
	local a='\[\e[00;01;07;34m\]' ; local e='\[\e[00;01m\]' ; local j='\[\e[00;01;34m\]' ; local n='\[\e[00;01;33m\]'
	local b='\D{%F}'              ; local d='\D{%T}'        ; local m='\D{%s}'
	local f=':\w/:>'              ; local h='-\$'		    ; local i=':\W/:>'
	local k='\D{%d-%m-%y}'        ; local l='\D{%H%M}'      ; local c='\D{%Y%m%d}'
    PS0=''
	if   [[ "${1,,}"  =  'l' ]] ; then PROMPT_DIRTRIM="2"; PS1="$a $b | $d $e $f "
	elif [[ "${1,,}"  =  'm' ]] ; then PROMPT_DIRTRIM="1"; PS1="$a $k $l $e $i "
	elif [[ "${1,,}"  =  's' ]] ; then PS1=" $m $h "
    elif [[ "${1,,}"  = 'xs' ]] ; then PS1="${n} :\w:$ ${e}"
        #PS0="${a} ${PWD} | ${b} | ${d} \n"'\e[0 q\[\e[0m\]'
	elif [[ "${1,,}"  =  'x' ]] ; then return 1 #PS1='$(xspec)'
	else return 2 ; fi
    PS1+='\[\e[0m\]'
} ; mps 'xs'
#########################################################################
cd_from_lf() {
    lf -log="${HOME}/LOG/LF_LOGS/$(date +'%s')_LF_LOG.txt"
    if a="$(find /tmp/ -name 'tmplf*' 2>/dev/null | tail -1)"
    then
        if [[ "${PWD}" != "${a}" ]] ; then
            cd "$(cat "${a}")" || return 1
        fi
        trash-put "${a}"
    fi
}
cg() {
    if [[ -z "$*" ]] ; then
        compgen -A -abck | sort | uniq -c | grep -Pio '.+[0-9]+ \K.*'
    else
        while [[ -n "${1}" ]] ; do
            compgen -A -abck | sort | uniq -c | grep -Pio '.+[0-9]+ \K.*' | grep -Pi "${1}"
            compgen -A -abck | sort | uniq -c | grep -Pio '\(?=>.+[0-9]+ \).*'; shift
        done
    fi
}
my_cd()	{
    [[ "${1}" = '-g' ]] && cd / && shift 1

    cd "${@:-"$(fd -H -t d 2>/dev/null | fzf --preview="ls -1 {}")"}"
}
open_mpv() {
    local AUD CLOSE FILE_FZF
    while [[ "${1,,}" =~ ^-[-?].*$ ]] ; do
        [[ "${1,,}" =~ ^-m(ono)?      ]] && AUD="mono"
        [[ "${1,,}" =~ ^(-c|--close)$ ]] && CLOSE="close"
        [[ "${1,,}" =~ ^(-f|--fzf)$   ]] && \
            FILE_FZF="$(fd --hidden "[.](mp4|mkv|avi|mpeg|mpeg4|mpv|mpv4|m4v|mpg|m4p|mov|wmv|webm)$" | fzf --preview="ctpv {}")"
            [[ ! -f "${FILE_FZF}" ]] && return 1
        shift 1
    done

    if [[ -n "${FILE_FZF}" ]] ; then
        mpv --audio-channels="${AUD:-"auto"}" "${FILE_FZF}" & disown
    else
        mpv --audio-channels="${AUD:-"auto"}" "${@:-.}" & disown
    fi
    [[ "${CLOSE}" = 'close' ]] && exit
}
open_prog() {
    xdg-open "${1}" & disown
}
upd_pip_z() {
    local A zname
    local IFS=$'\n'
    zname="$(date +'%Y%m%d')_pipoutdated.txt"
    pip list --outdated > "${zname}"
    A="$(cat "${zname}" | sed '1,2d' | sed -e 's/[ ][ ]*/ /g' | cut -d' ' -f1)"
    for i in $A ; do pip install --upgrade "${i}"; done
    return "$?"
}
fpend() {
    if [[ "$1" =~ ^-[dD](ate)? ]] ; then shift 1; local MDATE; MDATE="#$(date)"; fi
    if [[ -f "${1}"            ]] ; then
        for i in "${@:2}" "${MDATE:-"_"}"; do
            echo "${i}" '  |---|  ' "${1}"
            echo "${i}" >> "${1}"
        done
        return "$?"
    fi
    echo "INCORRECT ARGUMENTS"; return 1
}
addally() {
    echo '#----------ADDALLY----------# '"${ITEXT}"  >> "$HOME/.bashrc"
    printf 'alias %s='\''cd "%s"'\'' %s\n' \
        "${1}" "${PWD/$HOME/\$HOME}" "${ITEXT}" >> "$HOME/.bashrc"
}
rifs()   { IFS=$' \t\n'; printf 'IFS=%q\n' "${IFS}" ; }
ppifs()  { printf "IFS=%q" "${IFS}"; echo ""        ; }
pifs()   { printf     "%q" "${IFS}"; echo ""        ; }
acheck() { compgen -c  | grep -x "${@}"             ; }
gport_function() { netstat -lntu | grep -Pi "${@:-""}" ; }
alias_conflict() {
    local beg cvm wcl
    beg='    '
    echo "------------------------------"
    cvm="$(compgen -c)"
    for i in $(alias -p | grep -Pio '^[ \t]*alias[ \t]*\K[^=]*') ; do
        wcl="$(grep -x "${i}" <<< "${cvm}" | wc -l)"
        if [[ "${wcl}" -gt 1 ]] ; then
            echo "${wcl} - ${i}"
            if [[ "${1,,}" =~ ^[-][-]?f(ull)?$ ]] ; then
                type -a "${i}" |
                    sed 's/^/'"${beg}"'/' |
                    sed 's/.*is aliased to [`][ \t]*/\n'"${beg}""${beg}"'/'
            fi
            echo "------------------------------"
        fi
    done
}
get_alias_fzf() {
    local prc='grep -Po '
    local prc+='"^alias[ \t]*"{}"[=].[ \t]*\K.*" '
    local prc+="$HOME/.bashrc"
    xcmenu --input --clipboard \
        "$(fzf --preview="${prc}" < \
            <(alias -p | grep -Pio '^[ \t]*alias[ \t]*\K[^=]*'))"
}
bash_history_grab() {
    if [[ -n "${2}" ]] ; then
        grep -Pi "${2}" "$HOME/.bash_history2" | tail -n "${1}"
    else
        grep -Pi "${1}" "$HOME/.bash_history2"
    fi
}
function sup_copy() {
    "${@}" | xcmenu --input --clipboard
}
function rg_with_p() {
    rg "${@}" | $PAGER
}
#########################################################################
#-----------------------------------------------------------------------#
#  ALIASES								                                #
#-----------------------------------------------------------------------#
#########################################################################
#---------------------------------------#
#                              SPECIAL  #
#---------------------------------------#
alias        anyr='anyremote'
alias          ls='ls --color="auto" '
alias        grep='grep --colour="auto" '
alias   systemctl='systemctl --no-pager'
alias        info='info --vi-keys'
alias        sudo='sudo -v; sudo '
alias          df='df -h'
alias          cp='cp -i'
alias        free='free -h'
#---------------------------------------#
#                   ONE LETTER <LOWER>  #
#---------------------------------------#
alias    a='         get_alias_fzf'
alias    b='         cd "$HOME/bin/"'
alias    c='         cd ..'
alias    d='         deactivate' # For python virtualenv
alias    e='         xcmenu --input --primary'
alias    f='         /usr/bin/fd'
alias    g='         grep -Pi'
#alias   i='         iex' # elixir
#alias   j='         flask run --cert="$HOME/ADD_TO_TRUSTED/mykey.crt" --key="$HOME/.cretse_ridi/mykey.pem"'
#alias   k='         kiwix-desktop'
alias    l='         cd_from_lf' # my lf, so it cd's shell after exiting lf
alias    m='         mimetype'
alias    n='         lsd --icon="never" -rt --permission="octal"  --date=+"  %_H:%M  %y  %b  %_d  " --blocks="permission,user,date,name"'
#-       o           #-
alias    p='         pwd'
#-       q           #-
alias    r='         \rg --pcre2 -i'
alias    s='         cd - >/dev/null'
alias    t='	     trash-put'
#-       u           #-
alias    v='         sc-im'
#-       w           RESERVED
alias    x='         xdg-open'
alias    y='         source .venv/bin/activate'
alias    z='         zim'
#---------------------------------------#
#                   ONE LETTER <UPPER>  #
#---------------------------------------#
alias    C='         my_cd'
alias    E='         xcmenuctrl'
alias    F='         grep -F'
alias    H='         cd "$HOME"'
alias    M='         ./manage.py'
alias    O='         open_prog'
alias    P='         readlink -f' # get full path of file
alias    W='         whereis'
#        X           RESERVED
#---------------------------------------#
#                   TWO LETTER <UPPER>  #
#---------------------------------------#
alias   ufwd='      ufw delete'
alias   ufws='      ufw status verbose'
alias   ufwn='      ufw status numbered'
alias   cnf='       cd "${XDG_CONFIG_HOME}"; cd "$(find -maxdepth 1 -type d -printf "%f\n" | fzf --preview="ls {}")"'
alias   cde='       cd "${CODING}"; cd "$(find . -maxdepth 3 -type d | grep -Fv "[.]git" | sort -n | fzf --preview="ls {}")"'
alias   nvcode='    cd "${CODING}"; nf'
alias   ww='        cd "${MYWEB}"'
alias   ac='        acheck'
alias   pe='        ps -eo comm=,'
alias   po='        ps -eo cmd=,'
alias   hb='        nvim $HOME/.bash_history2'
alias   cl="        printf '\n%.0s_______________________________' {1..400} ; printf '%.0s\n' {1..500} ; clear"
alias   fz='        my_cd'
alias   xf='        xdg-open "$(fzf --preview="ctpv {}")"'
alias   nf='        rg --ignore-file="$XDG_CONFIG_HOME/rg/code.rg" --hidden --files . 2>/dev/null | fzf --preview="highlight -O ansi -l {} 2>/dev/null" --print0 | xargs -0 -r -o nvim'
alias   hf='        find $HOME -iname'
alias   ic='        clear; imgcat'
alias   nv='        nvim'
alias   rt='        \rg --hidden --ignore-file="$XDG_CONFIG_HOME/rg/rg_basic.gitignore" --pcre2 -i'
alias   rh='        \rg --hidden --ignore-file="$XDG_CONFIG_HOME/rg/rg_html_web.gitignore" --pcre2 -i'
alias   ro='        \rg --hidden --ignore-file="$XDG_CONFIG_HOME/rg/rg_html_web.gitignore" --one-file-system --pcre2 -i'
alias   gg='        grep -P -r -i'
alias   xg='        grep -r -i  --exclude=\*.{dll,gpg,iso,au,elc,xpm,xcf,apk,snap,out,jar,sx,s,bin,o,exe,deb,pyc,pyo,aac,webm,alac,ape,ogg,mp4,mkv,m4a,mp4a,avi,mp3,wav,flac}'
alias   yg='        xg          --exclude=\*.{rar,tar,gz,tgz,zip,bz2,tbz2}'
alias   zg='        yg          --exclude=\*.{pdf,mobi,epub,azw,azw2,djvu,lit,azw3}'
alias   tl='        tar --list --file'
alias   ll="        lsd --icon='never' -rt --permission='octal'  --date=+'[%_H:%M:%S|%a|%D]' --blocks='permission,user,date,name'"
alias   lla='       ll -a'
alias   gd='        xcmenu --input --clipboard "$(pwd)"'
alias   lc='        compgen -c'
alias   cz='        ccze -m ansi'
alias   gf='        grep --file="-" -Fi "$HOME/.bashrc" <<<'
alias   gr='        grep --file="-" -Pi "$HOME/.bashrc" <<<'
#----------------------------------------#
#                         THREE LETTER   #
#----------------------------------------#
alias   rml='       rmlint --no-followlinks --keep-all-tagged --no-crossdev --paranoid --progress --types="duplicates"'
alias   pgr='       $PAGER'
alias   loc='       locate'
alias   cop='       xcmenu --input --clipboard'
alias   snv='       sudoedit'
alias   pdf='       zathura --fork'
alias   i3c='       i3 -C "$HOME/.config/i3/config"'
alias   lke='       cd $HOME/Notebooks/REFERENCE_SHEETS/;           lf ; cd -'
alias   acc='       alias_conflict'
alias   acf='       alias_conflict --full'
alias   btc='       bsdtar -cf'
alias   img='       nsxiv -0'
alias   ldi='       fdisk -l -o +uuid'
alias   lsn="       lsd --icon='never' -l"
alias   lst="       lsd --icon='never' -ltrh"
alias   lsz="       lsd --icon='never' -lSrh"
alias   psg='       ps ax | grep -Pi'
alias   bsg='       ps ax | grep -Pv "/usr/lib/brave" | grep -Pi'
alias   inx='       inxi' # Computer stats, hardware
alias   pse='       ps -eo comm=, | grep --ignore-case'
alias   pso='       ps -eo cmd=, | grep --ignore-case'
alias   tre='       ps -ejH'
alias   slc='       compgen -c | grep -i'
alias   copg='      sup_copy' #copy command
alias   comv='      command -V'
alias   listaudio=" find . -type f -iregex '.*[.]\(mp3\|flac\)'"
alias   listpics="  find . -type f -iregex '.*[.]\(jp[e]?g\|png\|tiff\|webp\|bmp\|avif\)'"
alias   listvids="  find . -type f -iregex '.*[.]\(mov\|m4v\|mkv\|mp[e]?[4vg]\|gif[v]?\|webm\|avi\|amv\)'"
alias   listmedia=" listaudio; listpics; listvids"
alias   gital='     git log --source --all -S'
alias   alas_np='   alias -p | grep -Pio "^[ \t]*alias[ \t]*\K[^=]*" | column'
alias   conf='      cd "$XDG_CONFIG_HOME"'
alias   fread='     fd "[.](pdf|epub|mobi|azw2|djvu)$" | fzf --preview="ctpv {}" --print0 | xargs -0 -r -o zathura --fork'
alias   bhagr='     cd "$BASH_HISTORY_ARCHIVE"; rg 2>/dev/null'
alias   testren='   perl-rename -v -n'
alias   doren='     perl-rename -v'
alias   quickren="  perl-rename -v 's/[^0-9a-zA-Z\-.]/_/g' *"
alias   k_at_spi2=' killall at-spi2-registryd; killall at-spi2-bus-launcher; killall at-spi-registryd; killall at-spi-bus-launcher'
alias   tracenet='  strace'
alias   gclone='    cd "${CLONED}"; git clone'
alias   nimg='      nsxiv -0 .'
alias   pcal='      calcurse'
alias   trev='      ps axjf'
alias   tres='      ps -eHo euser,ruser,suser,fuser,f,comm,label'
alias   decl='      declare -f'
alias   ezchmod='   chmod og-rwx -R .'
#--------------------------------------------------------MAN-#
alias   sap='       apropos'
alias   men='       (read _z; MAN_KEEP_FORMATTING=1 man -a "${_z}" 2>/dev/null | $PAGER) <<< '
alias   manlist='   man -f'
alias   sman='      man -K --regex'
#------------------------------------------------------------#
alias   gport='     gport_function'
alias   isport='    (read _z; ss -lp "sport = :${_z}") <<< '
alias   xprattach=' nohup /usr/bin/xpra attach :${XPRA_DISPLAY_NUMBER} &'
alias   grab_dir='  xcmenu --input --clipboard "$(pwd)"'
alias   git_mt='    git log --pretty=format:"%h %s" --graph'
alias   upfonts='   fc-cache && fc-cache-32; echo "return $?"'
alias   getfont='   fc-list -v | grep -i '
alias   list_coms=' compgen -c'
#alias   fnsc='      (read _z; $EDITOR <(xlsfonts | grep -F -- "--0-0-0-0-" | grep -Pi -- "${_z:-''}")) <<<'
#------------------------------------------------------EXPAC-#
alias   spac='      expac -HM "%m %n" | sort -n'           # Size of packages pacman
alias   pgspac='    expac -HM "%m %n" | sort -n | $PAGER'  # Size of packages pacman
alias   paclast="   expac --timefmt='%Y    %m    %d    %R' '%l    --    %n' | sort | grep"
#--------------------------------------------------------YAY-#
alias   yz='        yay --sortby="votes" -Ss'
alias   yasyel='    yay -Qs'
alias   yasye='     yay --sortby="votes" -Ss'
alias   yasyename=' yay --sortby="votes" --searchby="name" -Ss'
alias   yayremove=' yay -Yc --noconfirm; yay -Sc --noconfirm; yay -Scc --noconfirm'
alias   yacool='    yay --color=always -Sl aur | grep "Installed" | grep'
alias   yaycool='   yay --color=always -Sl aur | grep "Installed" | grep'
alias   yayse='     yay --sortby="votes" -Ss'
alias   yaysename=' yay --sortby="votes" --searchby="name" -Ss'
alias   yayi='      yay -Si'
alias   yaysalt='   yay --color=always -Sl | grep -Pio ".*(?=\[installed\])"'
alias   yayp='      yay -P --stats'
alias   yayil='     yay -Qi'
alias   yaysel='    yay -Qs'
alias   yayfrom='   yay -Qo'
alias   yayfiles='  yay -Qql'
alias   yig='       (read _a _b; yay -Ss "${_a}" | grep -C1 -Pi "${_b:-^[^ \t].*}") <<< '
alias   yigse='     (read _a _b; yay -Ss "${_a}" | grep -C1 -Pi "${_b:-^[^ \t].*}") <<< '
alias   rqs='       (read _a ; yay -Qi "${_a}" | grep -Pi "^[ \t]*(Required[ \t]*By|Optional[ \t]*For)" | grep -Pio "(.*[:]|[ \t]*[^ \t]*)") <<< '
alias   pqs='       (read _a ; yay -Qi "${_a}" | grep -Pi "^[ \t]*Depends[ \t]*On" | grep -Pio "(.*[:]|[ \t]*[^ \t]*)") <<< '
alias   opqs='      (read _a ; yay -Qi "${_a}" | grep -Pi "^[ \t]*Optional[ \t]Deps*" | grep -Pio "(.*[:]|[ \t]*[^ \t]*)") <<< '
#-----------------------------------------------------PACMAN-#
alias   ptc='       pactree --color' #Pacman Dependencies
alias   pacneed='   pacman -Qet'
alias   pacreg='    pacman -Sq --color=always'
alias   pacool='    pacman --color=always -Sl | grep -i installed | grep -i'
alias   pacse='     pacman -Ss --color=always'
alias   paci='      pacman -Si --color=always'
alias   pacdep='    pacman -T  --color=always'
alias   paclocal='  pacman -Qm'
alias   pacsel='    pacman -Qs'
alias   pacil='     pacman -Qi'
alias   pacprog="   pacman -F"
alias   pacnot='    pacman --color=always -Sl | grep -v "installed" | xargs -d $"\n" | grep -P'
alias   pacfrom='   pacman -Qo'
alias   pacfiles='  pacman -Qql'
alias   pascel='    pacman -Qs'
alias   pasce='     pacman -Ss'
alias   flg="       pacil | grep -A 3 -B 18 'Installed as a dependency for another package' | grep -Pi -B 10 -A 11 '^Required by.*None' | grep -Pi -B 12 '^Optional\ for.*None$' | grep -Pio '^Name[\ \t:]*\K.*$'"
alias   fle='       pacil | grep -A 3 -B 18 "Installed as a dependency for another package" | grep -Pi -B 10 -A 11 '"'^Required by [\ \t]*:\ None'"' | grep -Pi '"'^Name.*$'"
alias   pigse='     (read _a _b; pacman -Ss "${_a}" | grep -C1 -Pi "${_b:-^[^ \t].*}") <<< '
#------------------------------------------------------------#
alias   sctl='      journalctl | ccze -m ansi'
alias   i3e='       nvim -p "$HOME/.config/i3/"*'
alias   ebash='     nvim $HOME/.bashrc; source ~/.bashrc'
alias   einp='      nvim $HOME/.inputrc'
alias   editnv='    nvim $HOME/.config/nvim/init.vim'
alias   emime='     nvim $HOME/.config/mimeapps.list'
alias   ysb='       source $HOME/.bashrc'
alias   capkey='    xev | grep -Pio '\''(keysym [^)]*)'\'
alias   nvgr='      grep --file="-" -Pri "$HOME/.config/nvim/" <<< '
alias   i3gr='      grep --file="-" -Pri "$HOME/.config/i3/"   <<< '
alias   vid='       open_mpv'
alias   fvid='      open_mpv --fzf'
alias   flip_img='  mogrify -rotate 180 *.jpg'
alias   killun='    killall at-spi2-registryd; killall at-spi2-bus-launcher; killall at-spi-registryd; killall at-spi-bus-launcher; killall tumblerd'
alias   szof="      du -axhc --time --max-depth=1 | grep -Pv '^0[ \t]' | sort -h"
alias   szofall='   du -ahc  --time --max-depth=1'
alias   bgsz='      szof | grep -P "^[^ ]*G"'
alias   getkeys_all='   xmodmap -pke'
alias   key_spec='      evemu-describe'
alias   betterkey='     showkey -k'
#alias   tma='       tmux attach'
#alias   tmn='       tmux new-session -t mx'
#alias   tmd='       tmux detach'
#-----------------------------------------------------------------------#
# - CODING -                                                            #
#-----------------------------------------------------------------------#
#alias   jweb="/usr/lib/jvm/java-19-openjdk/bin/jwebserver"
alias   springmr='  mvn spring-boot:run'
#-----------------------------------------------------DJANGO-#
alias   djs='       python manage.py runserver'
alias   tjs='       python manage.py test'
#--------------------------------------------------------PIP-#
alias   pips='      poetry search'
alias   pipf='      pip freeze'
alias   pipsl='     pip list | grep -i'
alias   pip3sl='    pip3 list | grep -i'
#-----------------------------------------------------------------------#
# - CD -                                                                #
#-----------------------------------------------------------------------#
alias   vids='      cd "$HOME/Videos/"'
alias   down='      cd "$HOME/Downloads/"'
alias   pics='      cd "$HOME/Pictures/"'
alias   docs='      cd "$HOME/Documents/"'
alias   spreds='    cd "$HOME/Documents/SPREADSHEETS/"'
alias   desk='      cd "$HOME/Desktop/"'
alias   wallz='     cd "$HOME/Pictures/Wallpapers"'
alias   nswp='      cd "$HOME/.mynvim/swapfiles/"'
alias   clne='      cd "$CLONED"'
#########################################################################
#-----------------------------------------------------------------------#
#  EXPORT   					                                        #
#-----------------------------------------------------------------------#
#########################################################################
#-----------------------------------------------------SYSTEM-#
export  FZF_DEFAULT_COMMAND='fd -u'
export  FZF_DEFAULT_OPTS='--bind ctrl-u:half-page-up
                          --bind ctrl-d:half-page-down
                          --bind ctrl-g:preview-half-page-down
                          --bind ctrl-h:preview-half-page-up
                          --bind ctrl-space:toggle-preview'
export  PAGER='most'
export  TERM='st-256color'
export  TERMINAL='/usr/local/bin/st'
export  EDITOR="nvim"
#--------------------------------------------------XDG-STUFF-#
export  XDG_CONFIG_HOME="$HOME/.config"
export  XDG_CACHE_HOME="$HOME/.cache"
#export  XDG_STATE_HOME="$HOME/.local/state/" # Have to fix dirs first
#export  XDG_DATA_HOME="$HOME/.local/data/"   # Have to fix dirs first
#-----------------------------------------------BASH-HISTORY-#
export  HISTSIZE=10000
export  HISTFILE="$HOME/.bash_history2"
export  HISTCONTROL=ignoreboth
#-------------------------------------------------------MINE-#
export  BACKUP="$HOME/BACKUP_FILES"
export  BASH_HISTORY_ARCHIVE="$HOME/Documents/BASH_HISTORY/"
export  DOCUMENTS="$HOME/Documents/"
export  DESKTOP="$HOME/Desktop/"
export  DOWNLOADS="$HOME/Downloads/"
export  CODING="$DESKTOP/Coding/"
export  CLONED="$DESKTOP/CLONED/"
export  LOCAL_BIN="$HOME/.local/bin" # By default this is in path (set by os, not by me) (just so i remember)
#-----------------------------------------------APPLICATIONS-#
export  NO_AT_BRIDGE=1
export  QT_QPA_PLATFORMTHEME="qt5ct"
export  npm_config_prefix="$HOME/.local"
export  GTK2_RC_FILES="/usr/share/themes/Midnight/gtk-2.0/gtkrc"
#------------------------------------------------------------------------------------------------------------------------------------------------ #
#####################   Fixes colored man pages when using `most`, for some reason, TY https://stackoverflow.com/users/26449/bill                 #
export  GROFF_NO_SGR=1 ### https://stackoverflow.com/a/32456403                                                                                   #
#####################   https://stackoverflow.com/questions/32384644/color-setting-works-for-only-for-help-tab-in-man-page-dosent-work-for-the-en #
#------------------------------------------------------------------------------------------------------------------------------------------------ #
#---------------------------------------------------------------------- #
#-`PATH`								                                #
#---------------------------------------------------------------------- #
if  [ -d "$HOME/bin/"         	 ] ; then PATH="$HOME/bin/:$PATH"        	 ;	fi
if  [ -d "$HOME/bin/txt2man"     ] ; then PATH="$HOME/bin/txt2man:$PATH"     ;	fi
if  [ -d "$HOME/bin/i3wm"     	 ] ; then PATH="$HOME/bin/i3wm:$PATH"    	 ; 	fi
if  [ -d "$HOME/bin/personal" 	 ] ; then PATH="$HOME/bin/personal:$PATH"	 ; 	fi
if  [ -d "$HOME/bin/ufw"      	 ] ; then PATH="$HOME/bin/ufw:$PATH"     	 ; 	fi
if  [ -d "$HOME/bin/random"   	 ] ; then PATH="$HOME/bin/random:$PATH"  	 ; 	fi
if  [ -d "$HOME/Desktop/MY_APPS" ] ; then PATH="$HOME/Desktop/MY_APPS:$PATH" ; 	fi
if  [ -d "/etc/systemd/user" 	 ] ; then PATH="/etc/systemd/user:$PATH"     ; 	fi
if  [ -d "/usr/bin"              ] ; then PATH="/usr/bin/:$PATH"             ;  fi

