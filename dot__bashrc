#
# ~/.bashrc
#
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
alias grep='grep --colour=auto'
PS1='[\u \W]\$ '

# --------------------------------------------------------------------- #
# `FUNCTIONS`															#
# --------------------------------------------------------------------- #
kn()		{ 
	z="${IFS}"; IFS=$'\n'
	ns=($(echo "$(grep -Pi '^ [0-9]+\K.*'"${1}"'.*$' <<< $(ps ax))"))
	echo "MATCHES GOT: ${#ns[@]}"
	echo "${ns[*]}"
}
acheck() 	{	
	while [[ -n "${1}" ]] ; do
		  compgen -c  | grep -x "${1}"; shift
	done									 			 			 
}
fzc() 		{	
	while [[ -n "${1}" ]] ; do
		  compgen -c  | grep -Pi "${1}"; shift
	done									 			 			 
}
my_cd()		{	
	if   [[ "${1}" = '-g' ]] ; then
		cd '/'; cd "$(find . -type d 2>/dev/null| fzf --preview="ls -1 {}" )"
	elif [[ -z "$@" 	  ]] ; then
				cd "$(find . -type d 2>/dev/null| fzf --preview="ls -1 {}" )"
	else
				cd "$@" 
	fi			 	 
}
vid()		{	
	AUD="auto"
	while [[ "${1}" =~ ^- ]] ; do
		if [[ "${1}" =~ ^-mono ]] ; then
			AUD="mono"
		fi
		shift
	done
	if [[ -n "${1}" ]] ; then mpv --audio-channels="${AUD}" "${@}" & disown; return 0
	else                      mpv --audio-channels="${AUD}" *	     & disown; return 0; fi
	return 1
}

pf() 		{   find 		  "${2:-"$HOME"}" | grep -Pi "${1}"   	 ; }
nifs() 		{ 	IFS=$'\n'   ; printf "IFS=%q" "${IFS}"; echo ""		 ; }
rifs() 		{ 	IFS=$' \t\n'; printf "IFS=%q" "${IFS}"; echo "" 	 ; }
ppifs()		{ 	              printf "IFS=%q" "${IFS}"; echo "" 	 ; }
pifs() 		{ 	              printf     "%q" "${IFS}"; echo ""	     ; }
cop() 	    {   xsel -bi 		 <<< "$@"			  ;	xsel -bo	 ; }
pas() 	    {   xsel -bo					 						 ; }
pasta()     {   cat              <<< $(pas)			  			     ; }
kad() 	    {   docker          kill $(docker ps -q) 				 ; }
rad() 	    {   docker            rm $(docker ps -a -q)				 ; }

# --------------------------------------------------------------------- #
# `ALIASES`															    #
# --------------------------------------------------------------------- #

alias 	       perlfind=" echo 'pf(), gf'"
alias 		   flg="      pacil | grep -A 3 -B 18 'Installed as a dependency for another package' | grep -Pi -B 10 -A 11 '^Required by.*None' | grep -Pi -B 12 '^Optional\ for.*None$' | grep -Pio '^Name[\ \t:]*\K.*$'"
alias 		   fl="       pacil | grep -A 3 -B 18 'Installed as a dependency for another package' | grep -Pi -B 10 -A 11 '^Required by.*None' | grep -Pio '^Name[\ \t:]+\K.*$'"
alias 		   fle='      pacil | grep -A 3 -B 18 "Installed as a dependency for another package" | grep -Pi -B 10 -A 11 '"'^Required by [\ \t]*:\ None'"' | grep -Pi '"'^Name.*$'"

alias	       c='        my_cd'
alias          cp='       cp -i'
alias	       h='        cd $HOME'
alias	       qread='    zathura  "$(fzf)"'
alias	       fo='       xdg-open "$(fzf)"'
alias		   fn='       nvim     "$(fzf --preview="nvim {}")"'
alias	       sudo='     sudo '
alias          df='       df -h'                         
alias          free='     free -m'                    
alias	       g='        grep --perl-regexp --ignore-case'
alias	       f='        find .'
alias	       gf='       find . | grep -Pi'
alias	       gfd='      find . -type d | grep -Pi'
alias	       gff='      find . -type f | grep -Pi'
alias	       rm='       echo "rm has been replaced with this message use trash-put or /bin/rm instead."'
alias	       rmi='      rm -i'
alias	       pdf='      zathura'
alias	       i3c='      i3 -C $HOME/.i3/config'
alias	       ren='      perl-rename -v -n'

alias	       pacse='    echo ""; pacman -Ss'
alias	       yayse='    echo ""; yay -Ss'
alias	       pacsel='   echo ""; pacman -Qs'
alias	       yaysel='   echo ""; yay -Qs'
alias	       yayi='     echo ""; yay -Si'
alias	       paci='     echo ""; pacman -Si'
alias	       yayil='    echo ""; yay -Qi'
alias	       pacil='    echo ""; pacman -Qi'

alias	       nv='       nvim'
alias	       snv='      sudoedit'

alias		   ebash='    nvim $HOME/.bashrc'
alias		   editnv='   nvim $HOME/.config/nvim/init.vim'

alias	       img='      nsxiv -0'
alias	       nimg='     nsxiv -0 .'
alias	       ic='       clear; imgcat'
alias	       ldi='      fdisk -l -o +uuid'
alias 		   szof='     du -ahc --time --max-depth=1'
alias		   lsd='      ls -lh'
alias		   lst='      ls -ltrh'
alias		   lsz='      ls -lSrh'
alias		   pe='       ps -eo comm=,'
alias		   po='       ps -eo cmd=,'
alias		   psg='      ps ax | grep -Pi'
alias		   pse='      ps -eo comm=, | grep --ignore-case'
alias		   pso='      ps -eo cmd=, | grep --ignore-case'
alias		   tre='      ps -ejH'
alias		   trev='     ps axjf'
alias		   tres='     ps -eHo euser,ruser,suser,fuser,f,comm,label'
alias		   scim='     sc-im'

alias		   decl='     declare -f'

alias		   h='        cd $HOME'
alias		   aud='      cd $HOME/Audio/'
alias		   b='        cd $HOME/bin/'
alias		   desk='     cd $HOME/Desktop/'
alias		   docs='     cd $HOME/Documents/'
alias		   notes='    cd $HOME/Documents/Notepad/'
alias	       down='     cd $HOME/Downloads/'
alias	       pics='     cd $HOME/Pictures/'
alias	       vids='     cd $HOME/Videos/'

# --------------------------------------------------------------------- #
# `EXPORT`																#
# --------------------------------------------------------------------- #
export            MYPRINTER="MYPRINT"
export           NNN_COPIER="$HOME/nscript/csript"
export                 DOCS="$HOME/Documents/"
export                 DESK="$HOME/Desktop/"
export                 DOWN="$HOME/Downloads/"
export               EDITOR="nvim"
export             NVIMSWAP="$HOME/.local/share/nvim/swap/"
export           PYTHONPATH="${PYTHONPATH}:$HOME/MY_PYTHON_MODULES/"
export           PYTHONPATH="${PYTHONPATH}:/usr/bin/python3"
export QT_QPA_PLATFORMTHEME=qt5ct
export      FZF_CTRL_T_OPTS="--preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'"
export			       LESS=""
#    export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"
# --------------------------------------------------------------------- #
# `PATH`																#
# --------------------------------------------------------------------- #
if  [ -d "$HOME/bin/"         			                 ] ;    then PATH="$HOME/bin/:$PATH"        			                             ; fi

if test -n "$KITTY_INSTALLATION_DIR" -a -e "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; then source "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; fi

if test -n "$KITTY_INSTALLATION_DIR" -a -e "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; then source "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; fi
# --------------------------------------------------------------------- #
# `END` 																#
# --------------------------------------------------------------------- #
set -o vi
