
#-
#- ~/.bashrc
# shellcheck disable=SC1000-SC9999
#-
#-If not running interactively, don't do anything
[[ $- != *i* ]] && return
alias ls='ls --color=auto'
alias grep='grep --colour=auto'
PS0=''
PS0+='\e[0 q'
INSERT='$(echo "${PWD/~/\~}" | perl -pe '\''s/^(\/[^\/]*|~)[\/]\K.*(?=\/[^\/]*$)/../g'\'')'
INSERT2='$(echo "${PWD/~/\~}" | perl -pe '\''s/^(\/[^\/]*|~)[\/]\K.*(?=\/[^\/]*$)/../g; s/[^ ]/ /g'\'')'
PS1=''    
PS1+='\[\e[1;37m\]['
PS1+='\[\e[m\]'
PS1+='\A\[\e[1;37m\]|'
PS1+='\[\e[1;32m\]'"${INSERT}"'/'
PS1+='\[\e[1;37m\]]\$ '
PS1+='\[\e[m\]'
PS2=''
PS2+='             '"${INSERT2}"

# --------------------------------------------------------------------- #
#  FUNCTIONS								                            #
# --------------------------------------------------------------------- #
walc() {
   (IFS=$'\n'
    SWITCH=''
    for i in ${1:-$(wal --theme)} ; do
        if   [[ "${i}" =~ Light\ Themes ]] ; then SWITCH='-l'
        elif [[ "${i}" =~  Dark\ Themes ]] ; then SWITCH=''
        else
            z="$(grep -Pio '[- \t]*\K.*' <<< "${i}")"
            echo "------------------------------------------------${z}"
            if ! [[ "$(read zfun; echo "${zfun}")" =~ ^[\ \t]*$ ]] ; then
                wal ${SWITCH} --theme "${z}"
                sleep 0.5; $TERM & disown
            fi
            echo "------------------------------------------------${z}"
        fi
    done
    return "$?"
)}
kn() { 
   (IFS=$'\n'
    ns=($(echo "$(grep -Pi '^ [0-9]+\K.*'"${1}"'.*$' <<< $(ps ax))"))
    echo "MATCHES GOT: ${#ns[@]}"; echo "${ns[*]}"
)}
cg() {
    if [[ -z "$*" ]] ; then
        compgen -A function -abck | sort | uniq -c | grep -Pio '.+[0-9]+ \K.*'
    else 
        while [[ -n "${1}" ]] ; do
            compgen -A function -abck | sort | uniq -c | grep -Pio '.+[0-9]+ \K.*' | grep -Pi "${1}"
            compgen -A function -abck | sort | uniq -c | grep -Pio '\(?=>.+[0-9]+ \).*'; shift
        done									 			 			 
    fi
}
my_cd()	{
    if   [[ "${1}" = '-g' ]] ; then 
        cd /; shift 1
    fi

    cd "${@:-"$(find . -type d | fzf --preview="ls -1 {}" )"}"
}
vid() {
   (if [[ "${1}" =~ ^-mono ]] ; then AUD="mono"; shift 1; fi

    mpv --audio-channels="${AUD:-"auto"}" ${@:-*} & disown
)}
upd_pip_z() { 
   (IFS=$'\n' 
    zname="$(date +'%Y%m%d')_pipoutdated.txt"
    pip list --outdated > "${zname}"
    A="$(cat "${zname}" | sed '1,2d' | sed -e 's/[ ][ ]*/ /g' | cut -d' ' -f1)"
    for i in $A ; do pip install --upgrade "${i}"; done
    return "$?"
)}
fpend() {
   (if [[ "$1" =~ ^-[dD](ate)? ]] ; then shift 1; MDATE="#$(date)"; fi
    if [[ -f "${1}"            ]] ; then
        for i in "${@:2}" "${MDATE:-"_"}"; do 
            echo "${i}" '  |---|  ' "${1}"
            echo "${i}" >> "${1}" 
        done 
        return "$?"
    fi
    echo "INCORRECT ARGUMENTS"; return 1
)}
addally() {
    printf 'alias %s='\''cd "%s"'\''     %s' "${1}" "${PWD/$HOME/\$HOME}" "${IGNORE_TEXT}" >> "$HOME/.bashrc"
)}
rep_char() {
    (z="${1}"; while ((z--)) ; do echo -n "${2}"; done
)}
nifs()   { IFS=$'\n'   ; printf 'IFS=%q\n' "${IFS}" ; }
rifs()   { IFS=$' \t\n'; printf 'IFS=%q\n' "${IFS}" ; }
ppifs()  { printf "IFS=%q" "${IFS}"; echo ""        ; }
pifs()   { printf     "%q" "${IFS}"; echo ""        ; }
acheck() { compgen -c  | grep -x ${@}               ; }


#---------------------------------------------------------------------- #
#-ALIASES								#
#---------------------------------------------------------------------- #
alias   sudo='      sudo '
alias   kctpv='	    kill "$(pidof "ctpv")"'
alias   flg="       pacil | grep -A 3 -B 18 'Installed as a dependency for another package' | grep -Pi -B 10 -A 11 '^Required by.*None' | grep -Pi -B 12 '^Optional\ for.*None$' | grep -Pio '^Name[\ \t:]*\K.*$'"
alias   fl="        pacil | grep -A 3 -B 18 'Installed as a dependency for another package' | grep -Pi -B 10 -A 11 '^Required by.*None' | grep -Pio '^Name[\ \t:]+\K.*$'"
alias   fle='       pacil | grep -A 3 -B 18 "Installed as a dependency for another package" | grep -Pi -B 10 -A 11 '"'^Required by [\ \t]*:\ None'"' | grep -Pi '"'^Name.*$'"
alias   b='         cd "$HOME/bin/"'
alias   c='         my_cd'
alias   f='         $HOME/bin/my_find.sh'
alias   h='         cd "$HOME"'
alias   t='	        trash-put'
alias   x='         $HOME/bin/FOR_BASHRC/stars_c.sh'
alias   ac='        acheck'
alias   cl='        clear'
alias   cp='        cp -i'
alias   df='        df -h'
alias   fz='        my_cd'    
alias   fo='        xdg-open "$(fzf)"'
alias   fn='        nvim     "$(fzf --preview="nvim {}")"'
alias   gf='        find / -iname'
alias   hf='        find $HOME -iname'
alias   ic='        clear; imgcat'
alias   nv='        nvim'
alias   snv='       sudoedit'
alias   pc='	    clear; neofetch'
alias   pe='        ps -eo comm=,'
alias   po='        ps -eo cmd=,'
alias   conf='      cd "$XDG_CONFIG_HOME"'
alias   qread='     zathura  "$(fzf)"'
alias   free='      free -m'
alias   rmi='       rm -i'
alias   pdf='       zathura'
alias   i3c='       i3 -C "$HOME/.config/i3/config"'
alias   tyren='     perl-rename -v -n'
alias   doren='     perl-rename -v'
alias   quickren="  perl-rename -v 's/[^0-9a-zA-Z\-.]/_/g' *"
alias   ka='        killall'

#alias   pacman='    pac_func() { pacman "$@" 2>&1 | tee -a "$HOME/PACMAN_LOG.txt"; }; pac_func'
#PAC----------------------------------NON-LOCAL----------#
alias   pigse='     (read _a _b; pacman -Ss "${_a}" | grep -C1 -Pi "${_b:-^[^ \t].*}") <<< '
alias   pig='       (read _a _b; pacman -Ss "${_a}" | grep -C1 -Pi "${_b:-^[^ \t].*}") <<< '
alias   pacse='     pacman -Ss'
alias   pasce='     pacman -Ss'
alias   paci='      pacman -Si'
alias   yigse='     (read _a _b; yay -Ss "${_a}" | grep -C1 -Pi "${_b:-^[^ \t].*}") <<< '
alias   yig='       (read _a _b; yay -Ss "${_a}" | grep -C1 -Pi "${_b:-^[^ \t].*}") <<< '
alias   yayse='     yay --sortby="votes" -Ss'
alias   yaysename=' yay --sortby="votes" --searchby="name" -Ss'
alias   yayi='      yay -Si'
alias   yayp='      yay -P --stats'
#PAC-----------------------------------LOCAL-------------#
alias   pacsel='    pacman -Qs'
alias   pacil='     pacman -Qi'
alias   yaysel='    yay -Qs'
alias   yayil='     yay -Qi'
alias   paclast="   expac --timefmt='%Y    %m    %d    %R' '%l    --    %n' | sort | grep"
alias   pacclean='  yay -Scc; yay --clean'
alias   pacfrom='   pacman -Qo'
#PAC-----------------------------------------------------#

alias   i3e='       nvim -p "$HOME/.config/i3/"*'
alias   xr='        echo ""; nvim $HOME/.Xresources; xrdb ~/.Xresources'
alias   ebash='     nvim $HOME/.bashrc; source ~/.bashrc'
alias   einp='      nvim $HOME/.inputrc'
alias   editnv='    nvim $HOME/.config/nvim/init.vim'
alias   emime='     nvim $HOME/.config/mimeapps.list'
#-------------------------------------GREP---------------#
alias   ysb='       source $HOME/.bashrc'
alias   capkey='    xev | grep -Pio '\''(keysym [^)]*)'\'
alias   g='         grep --perl-regexp --ignore-case'
alias   xg='        grep -r -i  --exclude=\*.{dll,gpg,iso,au,elc,xpm,xcf}\
                                --exclude=\*.{apk,snap,out,jar,sx,s,bin,o,exe,deb,pyc,pyo}\
                                --exclude=\*.{jpg,jpeg,png,webp,bmp,gif}\
                                --exclude=\*.{aac,webm,alac,ape,ogg,mp4,mkv,m4a,mp4a,avi,mp3,wav,flac}'
alias   yg='        xg          --exclude=\*.{rar,tar,gz,tgz,zip,bz2,tbz2}'
alias   zg='        yg          --exclude=\*.{pdf,mobi,epub,azw,azw2,djvu,lit,azw3}'
alias   gr='        (echo ""; read _z; grep -Pi  "${_z}" "$HOME/.bashrc") <<< '
alias   nvgr='      (echo ""; read _z; grep -Pri "${_z}" "$HOME/.config/nvim/") <<< '
alias   i3gr='      (echo ""; read _z; grep -Pri "${_z}" "$HOME/.config/i3/") <<< '
#-------------------------------------GREP---------------#
alias   gport='     _myfunc() { netstat -lntu | grep -Pi "${@:-""}"; }; _myfunc'
alias   isport='    (read _z; ss -lp "sport = :${_z}") <<< '
alias   img='       nsxiv -0'
alias   nimg='      nsxiv -0 .'
alias   ldi='       fdisk -l -o +uuid'
alias   szof='      du -ahc --time --max-depth=1'
alias   bgsz="      sudo szof | grep -P '^[^ ]*G'"
alias     l="       lsd --icon='never'"
alias    ll="       lsd --icon='never' -rt --permission='octal'  --date=+'[%_H:%M:%S|%a|%D]' --blocks='permission,user,date,name'"
alias   lst="       lsd --icon='never' -ltrh"
alias   lsz="       lsd --icon='never' -lSrh"
alias   psg='       ps ax | grep -Pi'
alias   pse='       ps -eo comm=, | grep --ignore-case'
alias   pso='       ps -eo cmd=, | grep --ignore-case'
alias   tre='       ps -ejH'
alias   trev='      ps axjf'
alias   tres='      ps -eHo euser,ruser,suser,fuser,f,comm,label'
alias   scim='      sc-im'
alias   phone='     aft-mtp-cli'
alias   decl='      declare -f'
alias   hb='        htop'
alias   pips='      poetry search'
alias   sman='      man -K --regex'
alias   down='      cd "$HOME/Downloads/"'                                              
alias   pics='      cd "$HOME/Pictures/"'                                               
alias   aud='       cd "$HOME/Audio/"'                                                  
alias   docs='      cd "$HOME/Documents/"'                                              
alias   spreds='    cd "$HOME/Documents/SPREADSHEETS/"'                                              
alias   desk='      cd "$HOME/Desktop/"'                                                
alias   vids='      cd "$HOME/Videos/"'                                                 
alias   nitroz='    cd "$HOME/Pictures/NitroWallpapers"'
alias   nswp='      cd "$HOME/.mynvim/swapfiles/"'                                    
alias   testr='     . $HOME/test.sh'
alias   git_mt='    git log --pretty=format:"%h %s" --graph'
alias   mansec='    man -f'
alias   sap='       apropos'
alias   listman='   man -f'
alias   men='       (read _z; MAN_KEEP_FORMATTING=1 man -a "${_z}" 2>/dev/null | $PAGER) <<< '
alias   upfonts='   fc-cache && fc-cache-32; echo "return $?"'
alias   getfont='   fc-list -v | grep -i '
alias   lc='        compgen -c'
alias   slc='       compgen -c | grep -i'
alias   list_coms=' compgen -c'
#---------------------------------------------------------------------- #
#-QUICK-ADDED-ALIASES                                                   #
#---------------------------------------------------------------------- #


#---------------------------------------------------------------------- #
#-EXPORT							                                    #
#---------------------------------------------------------------------- #
export  PAGER='most'
export  TERM=st
export  EDITOR="nvim"
export  FZF_CTRL_T_OPTS="--preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'"
export  XDG_CONFIG_HOME="$HOME/.config"
export  XDG_CACHE_HOME="$HOME/.cache"
export  BROWSER="/usr/bin/elinks"
export  YAD_POS_X="1920"
export  YAD_POS_Y="1080"

export ATHAME_ENABLED=1
export ATHAME_SHOW_MODE=1
export ATHAME_SHOW_COMMAND=1
export ATHAME_SHOW_ERROR=0
export ATHAME_VIM_PERSIST=1
export ATHAME_USE_JOBS=1

#---------------------------------------------------------------------- #
#-`PATH`								#
#---------------------------------------------------------------------- #
if  [ -d "$HOME/bin/"         	 ] ; then PATH="$HOME/bin/:$PATH"        	 ;	fi
if  [ -d "$HOME/bin/txt2man"     ] ; then PATH="$HOME/bin/txt2man:$PATH"     ;	fi
if  [ -d "$HOME/bin/i3wm"     	 ] ; then PATH="$HOME/bin/i3wm:$PATH"    	 ; 	fi
if  [ -d "$HOME/bin/gman"     	 ] ; then PATH="$HOME/bin/gman:$PATH"    	 ; 	fi
if  [ -d "$HOME/bin/personal" 	 ] ; then PATH="$HOME/bin/personal:$PATH"	 ; 	fi
if  [ -d "$HOME/bin/ufw"      	 ] ; then PATH="$HOME/bin/ufw:$PATH"     	 ; 	fi
if  [ -d "$HOME/bin/random"   	 ] ; then PATH="$HOME/bin/random:$PATH"  	 ; 	fi
if  [ -d "$HOME/Desktop/MY_APPS" ] ; then PATH="$HOME/Desktop/MY_APPS:$PATH" ; 	fi
if  [ -d "/etc/systemd/user" 	 ] ; then PATH="/etc/systemd/user:$PATH"     ; 	fi
if  [ -d "/usr/bin"              ] ; then PATH="/usr/bin/:$PATH"             ;  fi

if  test -n "$KITTY_INSTALLATION_DIR" -a -e "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; then source "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; fi
if  test -n "$KITTY_INSTALLATION_DIR" -a -e "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; then source "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; fi
set -o vi
shopt -s dotglob
#######shopt -s globstar
#---------------------------------------------------------------------- #
#-END 									#
#---------------------------------------------------------------------- #

