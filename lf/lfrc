
set shell bash
set shellopts '-eu'
##USE DOUBLE QUOTES FOR 'set ifs "something"'
#set period 1
set ifs         "\n"
set ratios      2:3:5
set info        size:time
set scrolloff   8
set autoquit
set drawbox
set dircounts
set preview
set number
set ignorecase
set noicons
set relativenumber
set sortby atime
set sixel true
set dirfirst true

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

cmd np &{{
	if   [[ "$lf_ratios" = "1:2:3" ]] ; then  lf -remote "send ${id} set nopreview     "
                                              lf -remote "send ${id} set ratios 1:3    "
	elif [[  "$lf_ratios" =  "1:3" ]] ; then  lf -remote "send ${id} set preview       "
                                              lf -remote "send ${id} set ratios 1:1    "
    else								      lf -remote "send ${id} set preview       "
										      lf -remote "send ${id} set ratios 1:2:3  "; fi
}}

cmd rep &{{
	i="$1"; while [[ $((i--)) -gt 0 ]] ; do lf -remote "send $id ${2}"; done
}}

cmd open &{{
    for i in ${fx[@]} ; do
        zz="$(xdg-mime query default "$(mimetype -Lb "${i}")")"
        if ! [[ "${zz}" = "${EDITOR}.desktop" ]] ; then
            for j in ${fx[@]}; do
                mimeopen "${j}" &>/dev/null & disown
            done
            return
        fi
    done
    lf -remote "send $id \$$EDITOR \$fx"
}}

cmd oneforone &{{
    lf -remote "send ${id} set nopreview"
    lf -remote "send ${id} set ratios 1"
}}

cmd trash ${{
    for i in ${fx[@]} ; do
        trash-put "${i}"
    done
}}

cmd autocd ${{
    echo "${PWD}" > "$(mktemp /tmp/tmplf.XXXXXXXX)"
    lf -remote "send $id quit"
}}

cmd toggle_info ${{
    if [[ -n "$lf_info" ]] ; then
        lf -remote "send ${id} set info"
    else
        lf -remote "send ${id} set info ${1}"
    fi
}}

map C 		:quit
map Q 		&lf -remote 'send quit'; lf -remote 'quit'
#-----------OPEN IN NEW WINDOW------------------------------#
map o 		&mimeopen "${f}" 2>/dev/null
#-----------ASK AND THEN OPEN IN NEW WINDOW-----------------#
map O 		$mimeopen --ask "${f}" 2>/dev/null
map m       push :!mkdir<space>

# - CD -
# Uppercase
map <gt>C   cd ~/.config/
map <gt>D   cd ~/Desktop/

# Lowercase
map <gt>b   cd ~/bin/
map <gt>c   cd ~/Desktop/Coding/
map <gt>d   cd ~/Downloads/
map <gt>e   cd ~/Desktop/Coding/ELIXIR/
map <gt>f   cd ~/Documents/
map <gt>i   cd ~/Documents/INFORMATION/
map <gt>h   cd ~/
map <gt>l   cd ~/MyLibrary/
map <gt>p   cd ~/Pictures/
map <gt>v   cd ~/Videos/

map e           np
map <lt>p       set preview!
map <lt><lt>    set ratios 1:3:5
map <lt>0       set ratios 1:2:3
map <lt>1       set ratios 1:2:1
map <lt>2       set ratios 1:2
map <lt>3       set ratios 1:1
map <lt>4       set ratios 2:1
map <lt>5       :oneforone
map <lt>6       set ratios 1:6
map <lt>7       set ratios 1:7
map <lt>8       set ratios 1:8
map <lt>9       set ratios 1:9
map <esc>       clear
map <enter>     shell
map I       :toggle_info "size:atime"
map H		set hidden!
map d  	  	set dironly!
map r 		set reverse!
map U       :unselect; clear
map TR		:trash
map RR      :reload
map RN		rename
map RF	    push :rename<enter><c-a><c-k>
map P		push :!echo<space>""<left>
map ;		push ''
map	K		:rep "3" "up"
map J		:rep "3" "down"
map VG		invert-below
map Vg		:invert-below; invert
#------------------------------------------------------------------#
#-----------CALL WITH THIS function to use autocd------------------#
#------------------------------------------------------------------#
map q 		:autocd
#
#   function cd_from_lf() {
#       lf
#       if a="$(ls -1 -tr /tmp/lf* | tail -1)"
#       then
#           cd "$(cat "${a}")" || return 1
#           trash-put "${a}"
#       fi
#   }
#



